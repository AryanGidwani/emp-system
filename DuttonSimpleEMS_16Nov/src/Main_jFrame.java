// importing the necessary packages
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author P0068839
 */
public class Main_jFrame extends javax.swing.JFrame {

    // ATTRIBUTES
    public MyHashTable theHT;

    // CONSTRUCTORS
    /**
     * Creates new form MainJFrame
     */
    public Main_jFrame() {
        initComponents();

        theHT = new MyHashTable(10);
        System.out.println("HERE HERE");

    }

    // METHODS   
    public MyHashTable getTheHT() {
        return theHT;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Display Employees");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add new employee");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressed_jButton3(evt);
            }
        });

        jButton5.setText("Save all employees to file");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Load all employees from file");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText("Employee Management System");

        jButton4.setText("Remove employee");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setText("Edit employee info");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(15, 15, 15))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButton3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton8))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DisplayAllEmps_jFrame theNumItems_jFrame = new DisplayAllEmps_jFrame();
        theNumItems_jFrame.setVisible(true); // makes the j frame visible
        theNumItems_jFrame.setMainHT(theHT);  // Have theSeparateJFrame mainHT point to the real HT.
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pressed_jButton3(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressed_jButton3
        // TODO add your handling code here:
        AddNewEmployee_jFrame theANEJFrame = new AddNewEmployee_jFrame();
        theANEJFrame.setVisible(true);
        theANEJFrame.setMainHT(theHT);
    }//GEN-LAST:event_pressed_jButton3

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        // Here, I need code that walks through the entire hash table
        // and writes the attribute values for each employee to a
        // text file (by using say buffered writer). 
        BufferedWriter bw = null;
        try {
	 String mycontent = "This String would be written" +
	    " to the specified File";
         //Specify the file name and path here
         
	 File textfile = new File("myfile.txt");
         System.out.println(textfile.getAbsolutePath());
	 /* This logic will make sure that the file 
	  * gets created if it is not present at the
	  * specified location*/
	  if (!textfile.exists()) {
	     textfile.createNewFile();
	  }

	  FileWriter fw = new FileWriter(textfile);
	  bw = new BufferedWriter(fw);
	  //bw.write(mycontent);
          //bw.newLine();
          for (ArrayList<EmployeeInfo> bucket: theHT.buckets){
              for(EmployeeInfo employee: bucket){
                  if(employee instanceof FTE){
                      // creates new lines and writes information of the full time employee
                      FTE theFTE = (FTE)employee;
                      //bw.newLixne();
                      bw.write("FTE");
                      bw.newLine();
                      bw.write(String.valueOf(theFTE.empNum));
                      bw.newLine();
                      bw.write(theFTE.firstName);
                      bw.newLine();
                      bw.write(theFTE.lastName);
                      bw.newLine();
                      bw.write(String.valueOf(theFTE.deductRate));
                      bw.newLine();
                      bw.write(String.valueOf(theFTE.yearlySalary));
                      bw.newLine();
                  }
                  
                  else {
                      // creates new lines and writes the information of the part time employee
                      PTE thePTE = (PTE) employee;
                      bw.write("PTE");
                      bw.newLine();
                      bw.write(String.valueOf(thePTE.empNum));
                      bw.newLine();
                      bw.write(thePTE.firstName);
                      bw.newLine();
                      bw.write(thePTE.lastName);
                      bw.newLine();
                      bw.write(String.valueOf(thePTE.deductRate));
                      bw.newLine();
                      bw.write(String.valueOf(thePTE.hourlyWage));
                      bw.newLine();
                      bw.write(String.valueOf(thePTE.hoursPerWeek));
                      bw.newLine();
                      bw.write(String.valueOf(thePTE.weeksPerYear));
                      bw.newLine();
                  }
                  bw.newLine();
              }
          }
          System.out.println("The information has been saved!"); // informs the user the information has been saved
          bw.close(); 

      } catch (IOException ioe) {
	   ioe.printStackTrace();
	}
	finally
	{ 
	   try{
	      if(bw!=null)
		 bw.close();
	   }catch(Exception ex){
	       System.out.println("Error in closing the BufferedWriter"+ex);
	    }
	}
      // END of bufferedwriter code
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        // Here, I need code that reads the attribute values for the employee
        // data stored in a text file (by say using buffered reader) and adding
        // each of those employees to the hash table.
        try {
            BufferedReader theBufferedReader = new BufferedReader(new FileReader("myfile.txt"));
            int numHT = theHT.numInHashTable;
            //int i = 0; // creates variable initially set to 0 used to loop until the value of numHT
            
            for (int i = 0; i < 100; i++) {
                // stores the contents of each thing such as employement type and number in its own variable
                String employementType = theBufferedReader.readLine();
                int empNum = Integer.parseInt(theBufferedReader.readLine()); // reads the line and casts it to an integer
                String firstName = theBufferedReader.readLine();
                String lastName = theBufferedReader.readLine();
                double deductRate = Double.parseDouble(theBufferedReader.readLine());
                if (employementType.equals("FTE")) {
                    double salary = Double.parseDouble(theBufferedReader.readLine()); // gets the salary of the employee
                    FTE theFTE = new FTE(empNum, firstName, lastName, 0, deductRate, salary); // full time employee
                    theHT.addEmployee(theFTE); // adds the full time employee
                    //System.out.println(theFTE.firstName);
                }
                
                if (employementType.equals("PTE")) {
                    // part time employee variables are initially set
                    double hourlyWage = Double.parseDouble(theBufferedReader.readLine());
                    double hoursPerWeek = Double.parseDouble(theBufferedReader.readLine());
                    double weeksPerYear = Double.parseDouble(theBufferedReader.readLine());
                    // part time employee
                    PTE thePTE = new PTE(empNum, firstName, lastName, 0, deductRate, hourlyWage, hoursPerWeek, weeksPerYear); // thePTE object created
                    theHT.addEmployee(thePTE); // adds the part time employee
                    //System.out.println(thePTE.firstName);
                    
                }
                i++; // incremenents the value of the loop at the end so that the loop can continue
                theBufferedReader.readLine();
            }
        }
        catch (Exception e) {
            System.out.println("The employees have been loaded to the file!"); // message for the user
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        RemoveEmployee_jFrame theRNEJFrame = new RemoveEmployee_jFrame();
        theRNEJFrame.setVisible(true);
        theRNEJFrame.setMainHT(theHT);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        EditEmployee_jFrame theEditJFrame = new EditEmployee_jFrame();
        theEditJFrame.setVisible(true);
        theEditJFrame.setMainHT(theHT);
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_jFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
